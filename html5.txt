一.doctype作用？严格模式和混杂模式的区分？如何触发
<!DOCTYPE> 声明位于文档中的最前面，处于 <html> 标签之前。告知浏览器的解析器，
用什么文档类型 规范来解析这个文档，DOCTYPE不存在或格式不正确会导致文档以混杂
模式呈现
严格模式就是浏览器根据web标准去解析页面，是一种要求严格的DTD，不允许使用任何表现层
的语法，混杂模式是一种向后兼容的解析方法。
触发标准模式或者说严格模式很简单，就是Html前申明正确的DTD，触发混杂模式可以在html文
档开始不声明DTD，或者在DOCTYPE前加入XML声明

二.html和xhtml的区别？
html：超文本标记语言
是一种基于web网页设计语言，xhtml是一个基于xml的内置语言。
xhtml：可扩展标记语言
元素必须被正确的嵌套，元素必须关闭，标签必须小写，必须有根元素

三.谈谈对html5的理解
1.良好的移动性，以移动设备为主。
2.响应式设计，以适应自动变化的屏幕尺寸
3.支持离线缓存技术，webStorage本地缓存
4.新增canvas，video，audio等新标签元素。新增特殊内容元素：article，footer，header，nav，section等，新增表单控件：calendar，date，time，email，url，search。
5.地理定位...


四.Js面向对象的几种方式
1.对象的字面量 var obj = {}
2.创建实例对象 var obj = new Object();
3.构造函数模式 function fn(){} , new fn();
4.工厂模式：用一个函数，通过传递参数返回对象
5.原型模式

五、前端页面由哪三层构成，分别是什么，作用是什么
1.html：（结构）：超文本标记语言，由html或者xhtml之类的语言负责创建，标签：也就是那些出现在尖括号里面的单词，对网页的语义做出描述，但是这些标签不包含关于如何显示有关内容的信息。
2.css：（表现）：层叠样式表，由css创建。css对”如何显示有关内容“问题做出了回答
3.js（行为）：客户端脚本语言，内容应该如何对事件处理做出反应。

六.如何对网站的文件和资源进行优化
1．文件合并（目的是减少http请求）
2．文件压缩 （目的是直接减少文件下载的体积）
3．使用cdn托管资源:CND即内容分发网络，依靠部署在各地的边缘服务器，通过中心频台的负载，分发，等，使用户就近获取所需要的内容，降低网络阻塞，提高用户的访问速率
4．使用缓存
5．gizp压缩需要的js和css文件
6．meta标签优化（title,description,keywords）,heading标签的优化,alt优化
7．反向链接，网站外链接优化


七.块状元素，行内元素和空元素
1.行内元素：a b strong select img input(内联元素)：设置宽高无效，不会自动换行
2.块元素：div ul ol p li h1 h2 ：识别宽高，可设置宽高，自动换行，多个元素在一块，按照从上往下排列
3.常见的空元素：<br> <hr> <img> <link> <meta>


八、说几条javasprit的基本规范 
1.不要在同一行声明多个变量。
2.请使用 ===/!==来比较true/false或者数值
3.使用对象字面量替代new Array这种形式
5.Switch语句必须带有default分支
6.函数不应该有时候有返回值，有时候没有返回值
7.For循环必须使用大括号
8.If语句必须使用大括号
9.for一in循环中的变量 应该使用var关键字明确限定作用域，从而避免作用域污染。


九.标准盒子模型和IE盒子模型
w3c：国际标准。
盒子模型：内容（content），padding（填充），margin（边界），边框（border）
区别：ie的width部分把border和padding计算进去了


十.JavaScript代码的执行顺序
包括两个阶段：预处理和执行。在预编译期，JavaScript解释器完成对程序的预编译处理，将代码转换为字节码，在执行期间
javascript解释器把字节码生成二进制机械码，并按顺序执行。执行过程中：HTML文档在浏览器中解析过程是：按文档流从上到下逐步解析页面结构和信息。
。JavaScript代码作为嵌入的脚本应该也算做HTML文档的组成部分，所以JavaScript代码在装载时的执行顺序也是根据script标签的出现来确定的。

十一、Ajax同步和异步的区别，如何解决跨域问题
同步的概念:同步强调的是顺序性.谁先谁后.异步则不存在这种顺序性.
同步：浏览器访问服务器请求，用户看得到页面刷新，重新发请求,等请求完，页面刷新，新内容出现，用户看到新内容,进行下一步操作。
异步：浏览器访问服务器请求，用户正常操作，浏览器后端进行请求。等请求完，页面不刷新，新内容也会出现，用户看到新内容。
解决：jsonp、 iframe、window.name、window.postMessage、服务器上设置代理页面


十二.ajax和json。优缺点
ajax:异步+js+xml
向服务器发送请求的时候，不需等待结果。不会发生整个页面的刷新，提高了用户体验
优点；
不需要使用插件支持，用户体验好，提升web程序性能，减轻服务器和带宽的分担
缺点：前进后退按钮被破坏，搜索引擎支持不够
jsan：一种数据结构，相对于xml   json更易读易懂，
优点：作为一种数据传输格式，jaso和xml很相似，但是更加灵巧
          JSON不需要从服务器端发送含有特定内容类型的首部信息。
缺点：   语法过于严谨    eval 函数存在风险

十二.dom节点获取的方法
1.通过id属性获取：document.getElementById()
2.通过name属性获取：document.getElementsByName()
3.通过标签名获取：document.getElementsByTagName()
4.通过class属性获取： document.getElementsByClassName()
5.原生js中的query select和query select all方法获取

十三.css引入的四种方式
1.内部样式表
2.内嵌样式
3链入外部样式：link
4.导入外部样式@import
区别：
link式xhml标签无兼容问题。import是css标签，只能处理css，低版本不支持

ie6无法定义1px左右高度的容器
标签居中问题的解决办法：margin:0 auto
xhtml注解方式<!-- -->
css注解：/* */

十四.call和apply方法
两个方法产生的作用果是一样的，但是call是将参数依次传递给借用的方法做参数，apply是第一个参数是对象，第二个是数组

十五.如何实现浏览器内多个标签之间的通信？
通过websocket把客户端和服务端建立socket连接，也可以调用localstorge。cookies等本地存储方法连接



十六.ready和onload的区别
页面加载时我们就去执行一个函数或动作
1.执行时间
　　window.onload必须等到页面内包括图片的所有元素加载完毕后才能执行。 
　　$(document).ready()是DOM结构绘制完毕后就执行，不必等到加载完毕。
2.编写个数不同
　　window.onload不能同时编写多个，如果有多个window.onload方法，只会执行一个 
　　$(document).ready()可以同时编写多个，并且都可以得到执行
3.简化写法

　　window.onload没有简化写法 
　　$(document).ready(function(){})可以简写成$(function(){});

十七.清除浮动的方法
1.clear both：
原理：添加一个div，利用css'提高clear：both'清除浮动，让父级div能自动获取到高度
优：简单，代码少，浏览器支持好，不易出现问题
缺：是以前的主要方法。会添加一些无用的空白标签，是后期维护的噩梦
2.给父级div定义高度
原理：父级div受到定义高度，解决了其无法自动获取高度的问题
优：简单，代码少，容易掌握
缺：适合高度固定的布局，要给出精确的高度，如果高度和父级不一样的适合。会产生问题
3.父级div设置over float：hidden
原理：必须定义width或zoom:1，同时不能定义height，使用overflow:hidden时，浏览器会自动检查浮动区域的高度。
优点：简单，代码少，浏览器支持好。
缺点：不能和position配合使用，因为超出的尺寸的会被隐藏。


十八.对前端工程师这个职位的理解？前景如何？
前端工程师是一个比较新兴的技术，各种技术层出不穷，随着客户体验重要性，前端的需求也是越来越多，对前端要求也是越来越高。
而且我们前端是最贴近用户的程序员，主要负责实现界面交互，提升用户的体验，而且有了nodejs，前端可以实现服务端的一些事情，
针对服务器的优化，拥抱最新的前端技术，除了掌握必须的技术技能，还要掌握用户的心理，善于沟通。
前景：前景无疑是肯定的，也需要我们时刻关注最新的技术，这会是一个时刻都在学习的道路

十九.
title：鼠标放上去显示额外信息，
alt：图片不显示的时候，用文字代替

二十.对web标准以及w3c的理解与认识
web标准是将页面的结构，表现和行为各自独立实现，w3c对标注提出了规范化的要求
1.对（html）结构的要求：标签规范化可以提高搜索引擎的抓取效率
（1）标签字母要小写
   2.标签要闭合
  3.标签不允许随意嵌套
2.对css和js的要求
  1.尽量使用外联css样式和js脚本，使结构，表现，行为分为三块。符合规范，同时提高渲染速度
  2.样式尽量少些行间样式表，使结构与表现分离，标签的id和class要做到见文知意，标签越少，加载越快，代码维护越高，便于改版
  3.不需要改变页面内容，便可以打印版本而不需要复制内容，提高网站易用性

二十一.
!important>行内>id>class>标签>通配符>浏览器自定义或继承

同源：同协议，同主机名，同端口号
同源限制：比如一个黑客程序，他利用Iframe把真正的银行登录页面嵌到他的页面上，当你使用真实的用户名，密码登录时，他的页面就可以通过Javascript读取到你的表单中input中的内容，这样用户名，密码就轻松到手了
同源限制的缺点：现在网站的js都会进行压缩，一些文件用到 了严格模式，一些没有，这时这些本来是严格模式的文件，被获取之后，就会串到文件的中间，不仅没起到作用，还浪费了字节


二十二.了解响应式布局吗？请大体说一说
意在实现不同屏幕分辨率的终端上浏览网页的不同展示方式。通过响应式设计能使网站在手机和平板电脑上有更好的浏览阅读体验。
设计步骤：
1．设置meta标签
2．根据媒体查询设置样式
3．设置多种视图宽度
4．注意点：
5．宽度使用百分比
6．处理图片缩放问题
二十三.
gitub

二十四,webpack和gulb
gulp工作方式为：在一个配置文件中，指明对一些文件经行压缩，组合，检查等，然后在运行中华输入相应的命令
webpack：吧项目当作一个整体，通过指定文件名（index.js，一般是入口文件），从这个文件中找到项目倚赖的文件，用loaders来处理。最后打包成一个可处理的js文件
若是webpack文件太大可以不必要的插件，代码压缩，代码分割，设置缓存等优化。

二十五.浏览器http请求过多怎么解决？
1.合并js，css文件
2.合并图片css sprite 雪碧图
3.使用image maps
4.使用cdn，减少http请求头










