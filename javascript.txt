1.面向对象和面向过程编程的区别
eg：看视频：点赞，发弹幕，品论。无先后顺序（）
过程：按步骤来，第一步-》第二步----。大多数事情，都保证顺序，
对象：思维方式：找到角色，确认职责

2.this指向问题：

js没有多态，是不区分类型的
多态：Object obj = new Array（）；父类引用子类。

this指代的是当前对象。所谓当前对象是指此刻正在执行这个函数对象，换句话说，谁调用这个函数,this就指向谁。 
在js中，在一个全局函数中，this指向window；
在严格模式下，没有直接挂载的函数中this指向window。
抑制this的值，在非严格模式下，调用方法call（）或者是apply（），null或undfine会转化全局对象，而在严格模式下，this始终指向指定的值，无论是什么值。

3.箭头函数的this //当箭头函数不存在
定时器里面的对象都是由windows来调用的。
去掉function，加一个箭头
箭头函数没有自己的this，是不能new的。

4.eval函数（出场率不高）:可以动态的执行代码。
使得js变得非常灵活，这是  其他语言所做不到的。
安全问题：一般来讲，少用eval。
要做转义处理：

requireJs===>AMD模块化规范的代表作
//cmd===>seajs
//commonjs===>nodejs
//Es6的模块化


严格模式：use strict
受严格模式的影响，eavl有自己的作用域，在严格模式下，只能在自己的括号内使用。


工程化，模块化，组件化
工程化：
最开始写代码，就是html，css全部写在一起，后来才知道吧他们分离开来，随着工程的复杂化，要提高开发效率，可维护性，所以就产生了工程化。使项目清晰，分工明确，开发效率高
模块化：
对代码和资源拆分，将一个大文件拆分成互相依赖的小文件，在进行统一的封装以及加载，eg：要写一个实现a功能的代码，在其他地方也能够用的到，这是我们家可以将其看成是一个模块采用一定的方式进行模块化编写。
组件化：
将页面看成是一个容器，页面上各个独立的部分，如头部，导航，侧边栏等，不同的页面根据内容的需要，放上相关的组件组成完整的一个页面。


es6简单语法：
箭头函数，this，
推荐使用let，
const：表示一个常量，let const只在最近的一个块中有用。
class：增加了类的概念。 


5.函数的防抖：
debounce
滚动页面的时候，函数是被反复的触发，我们是不需要调用这么多次的。（百度搜索）
利用延时器，两次执行，把上一次关掉，延迟了？s在执行，执行最后一次 
固定的时间内，只有最后一次执行，




6.函数节流
throttle：  
上一次执行完，下一次才继续执行。降低触发的频率。固定的单位时间类，只能发生指定的次数。


7.柯里化：函数的多参变成单参
fn（a,b,c）
fn(a)(b)(c)
（闭包）。


7.1闭包
闭包指的是有权访问另一个函数作用域中变量的函数，创建闭包最常见的方式就是在一个函数内部
在创建一个函数，通过另一个函数访问这个函数局部变量。通过闭包可以突破作用域链，将函数内部
的变量和方法传递到外部。
特性：函数内部在嵌套函数
内部可以引用外层的参数二号变量。
参数和变量不会被垃圾回收机制回收

8.作用域链：（也就是闭包：一个函数可以访问外部的变量）
函数有自己的作用域，当我们调用一个函数的时候执行的时候，他会找与自己作用域，如果有值，就调用这个，若是没有，则调用上一层，以此类推。作用域在编译期间就确定了，而且是不能改的。

作用域链的作用是保证执行环境里有权访问的变量和函数是有序的，作用域链的变量只能向上访问，变量访问到window对象即被终止，作用域链向下访问变量是不被允许的。
JavaScript通过原型继承


9.原型链的继承机制
js默认继承方式：prototype
原型链条：
先从对象找，有没有属性，如果有直接打印，若是没有，沿着自己的原型链找，找到那个就是那个

构造函数（phone）                 构造函数（object）
1                    1                                     1          1
1                        1      (.prototype)         1                   1
1                                                           1                       1(.prototype)
                                  1                         1                               1
 1                                                1        1                                      1
实例对象     --- 对象.__proto__ ---         prototype  -----.__xx__--      yy


10.垃圾回收机制（gc）
引用计数法

标记清除法：

标记整理法：

复制整理法：


11.
...[1,2,3]:展开操作符
eg：
let a =[1,2,3];
function text(x,y,z){
}
text(...a)//等价于text（1,2,3）






12.promise:
异步：
两个函数1：正确返回函数。错误返回函数



同步：从上向下，或者是，遇见大量数据的执行，中间卡顿这种情况下执行也叫同步。


异步：



Windows.ready 和windows.load 的区别与联系
两个都是在加载之后执行，但是有先后顺序
ready不必等图片媒体进来之前就可以运行代码，而load则需要等全部加载完成之后才运行。


stylus  css预处理器的用法
给css添加可编程性的东西，在stylus中可以使用变量，函数，判断，循环一系列css没有的东西
来编写样式文件，这个可以编译成css文件







